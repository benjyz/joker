function toggleTypes(e) {
  e.preventDefault(e);
  e.target.innerText = e.target.innerText === "hide types" ? "show types" : "hide types";
  e.target.parentNode.querySelectorAll('code').forEach(el => el.classList.toggle('hide'));
}

const terms = ["joker.base64/decode-string","joker.base64/encode-string","joker.better-cond/when-let","joker.better-cond/if-let","joker.better-cond/if-some","joker.better-cond/cond","joker.better-cond/when-some","joker.bolt/create-bucket","joker.bolt/delete","joker.bolt/get","joker.bolt/close","joker.bolt/next-sequence","joker.bolt/put","joker.bolt/open","joker.bolt/create-bucket-if-not-exists","joker.bolt/delete-bucket","joker.bolt/by-prefix","joker.core/letfn","joker.core/update","joker.core/bit-flip","joker.core/juxt","joker.core/shuffle","joker.core/and","joker.core/every-pred","joker.core/not-empty","joker.core/let","joker.core/>=","joker.core/*linter-config*","joker.core/swap!","joker.core/bit-test","joker.core/*print-readably*","joker.core/new","joker.core/sort-by","joker.core/joker-version","joker.core/take-last","joker.core/flatten","joker.core/pr","joker.core/with-meta","joker.core/declare","joker.core/prn-str","joker.core/prefers","joker.core/ex-message","joker.core/print","joker.core/with-out-str","joker.core/cond->","joker.core/require","joker.core/zipmap","joker.core/hash-map","joker.core/-","joker.core/replace","joker.core/-'","joker.core/list","joker.core/delay?","joker.core/second","joker.core/*2","joker.core/get","joker.core/alias","joker.core/ns-publics","joker.core/doseq","joker.core/mapv","joker.core/*command-line-args*","joker.core/min","joker.core/nthrest","joker.core/lazy-seq","joker.core/filterv","joker.core/print-str","joker.core/boolean?","joker.core/print-err","joker.core/bound?","joker.core/qualified-keyword?","joker.core/range","joker.core/bit-shift-right","joker.core/interleave","joker.core/hash-set","joker.core/reset-vals!","joker.core/ns-refers","joker.core/callable?","joker.core/remove-all-methods","joker.core/symbol?","joker.core/simple-symbol?","joker.core/*assert*","joker.core/==","joker.core/ns-aliases","joker.core/vec","joker.core/with-redefs","joker.core/min-key","joker.core/nth","joker.core/vary-meta","joker.core/neg-int?","joker.core/when-first","joker.core/bounded-count","joker.core/dedupe","joker.core/bit-not","joker.core/subs","joker.core/if-not","joker.core/merge-with","joker.core/any?","joker.core/bit-and","joker.core/ident?","joker.core/find-var","joker.core/pprint","joker.core/format","joker.core/namespace","joker.core/comp","joker.core/chan","joker.core/drop-last","joker.core/memoize","joker.core/ratio?","joker.core/when","joker.core/seq?","joker.core/when-not","joker.core/ns-sources","joker.core/some","joker.core/sort","joker.core/false?","joker.core/max-key","joker.core/take-nth","joker.core/merge","joker.core/partition-all","joker.core/associative?","joker.core/slurp","joker.core/default-data-readers","joker.core/drop-while","joker.core/sequence","joker.core/list?","joker.core/*ns*","joker.core/load-file","joker.core/assoc-in","joker.core/+","joker.core/ref","joker.core/int","joker.core/eval","joker.core/iterate","joker.core/cycle","joker.core/reset!","joker.core/reset-meta!","joker.core/string?","joker.core/get-method","joker.core/spit","joker.core/int?","joker.core/flush","joker.core/*main-file*","joker.core/interpose","joker.core/float?","joker.core/select-keys","joker.core/as->","joker.core/close!","joker.core/delay","joker.core/str","joker.core/->>","joker.core/bigint","joker.core/bit-and-not","joker.core/rational?","joker.core/bit-or","joker.core/if-let","joker.core/realized?","joker.core/not=","joker.core/newline","joker.core/char","joker.core/ex-data","joker.core/last","joker.core/reduce-kv","joker.core/cond","joker.core/pr-err","joker.core/complement","joker.core/fn","joker.core/prn","joker.core/vals","joker.core/with-bindings","joker.core/gensym","joker.core/rseq","joker.core/next","joker.core/inc'","joker.core/with-redefs-fn","joker.core/quot","joker.core/comment","joker.core/>!","joker.core/swap-vals!","joker.core/empty","joker.core/requiring-resolve","joker.core/*joker-version*","joker.core/dorun","joker.core/assert","joker.core/defonce","joker.core/double?","joker.core/qualified-ident?","joker.core/reduce","joker.core/cond->>","joker.core/val","joker.core/split-with","joker.core/trampoline","joker.core/take","joker.core/unsigned-bit-shift-right","joker.core/->","joker.core/lazy-cat","joker.core/vector","joker.core/for","joker.core/reversible?","joker.core/deref","joker.core/every?","joker.core/boolean","joker.core/remove-ns","joker.core/dec","joker.core/partition-by","joker.core/read","joker.core/num","joker.core/ffirst","joker.core/random-sample","joker.core/subvec","joker.core/bit-shift-left","joker.core/symbol","joker.core/create-ns","joker.core/true?","joker.core/char?","joker.core/fn?","joker.core/fnil","joker.core/time","joker.core/*1","joker.core/partial","joker.core/ns-name","joker.core/alter-meta!","joker.core/in-ns","joker.core/ns-resolve","joker.core/filter","joker.core/+'","joker.core/array-map","joker.core/conj","joker.core/map","joker.core/*linter-mode*","joker.core/disj","joker.core/chunked-seq?","joker.core/ns-unalias","joker.core/use","joker.core/fnext","joker.core/rand-int","joker.core/zero?","joker.core/peek","joker.core/=","joker.core/find","joker.core/butlast","joker.core/ns","joker.core/some-fn","joker.core/distinct","joker.core/ex-info","joker.core/rem","joker.core/remove","joker.core/bigfloat","joker.core/not-every?","joker.core/not","joker.core/*in*","joker.core/set?","joker.core/dotimes","joker.core/simple-keyword?","joker.core/*e","joker.core/read-line","joker.core/with-bindings*","joker.core/re-matches","joker.core/all-ns","joker.core/contains?","joker.core/*","joker.core/goobject?","joker.core/go","joker.core/mapcat","joker.core/map-indexed","joker.core/rest","joker.core/if-some","joker.core/var?","joker.core/qualified-symbol?","joker.core/first","joker.core/number?","joker.core/split-at","joker.core/identity","joker.core/Go","joker.core/read-string","joker.core/keyword","joker.core/count","joker.core/name","joker.core/assoc","joker.core/printf","joker.core/coll?","joker.core/*3","joker.core/re-find","joker.core/println-err","joker.core/pop","joker.core/take-while","joker.core/when-some","joker.core/println-str","joker.core/nil?","joker.core/intern","joker.core/doto","joker.core/vector?","joker.core/resolve","joker.core/when-let","joker.core/denominator","joker.core/seqable?","joker.core/class","joker.core/get-in","joker.core/rand-nth","joker.core/load","joker.core/var-get","joker.core/nfirst","joker.core/type","joker.core/identical?","joker.core/prefer-method","joker.core/*out*","joker.core/ns-unmap","joker.core/even?","joker.core/find-ns","joker.core/repeatedly","joker.core/bigfloat?","joker.core/keep-indexed","joker.core/distinct?","joker.core/re-pattern","joker.core/list*","joker.core/into","joker.core/GoTypeOfAsString","joker.core/reductions","joker.core/reverse","joker.core/*file*","joker.core/defmethod","joker.core/>","joker.core/max","joker.core/remove-method","joker.core/methods","joker.core/macroexpand-1","joker.core/bit-xor","joker.core/counted?","joker.core/re-seq","joker.core/<=","joker.core/ex-cause","joker.core/nnext","joker.core/repeat","joker.core/pos?","joker.core/*'","joker.core/special-symbol?","joker.core/pos-int?","joker.core/defn","joker.core/numerator","joker.core/ns-interns","joker.core/not-any?","joker.core/group-by","joker.core/xml-seq","joker.core/update-in","joker.core/some->>","joker.core/bit-clear","joker.core/ns-map","joker.core/nat-int?","joker.core/loaded-libs","joker.core/keys","joker.core/instance?","joker.core/case","joker.core/mod","joker.core/line-seq","joker.core/run!","joker.core/sequential?","joker.core/hash","joker.core/var-set","joker.core/defmulti","joker.core/binding","joker.core//","joker.core/the-ns","joker.core/drop","joker.core/println","joker.core/dec'","joker.core/while","joker.core/meta","joker.core/*err*","joker.core/some?","joker.core/atom","joker.core/or","joker.core/keep","joker.core/double","joker.core/cons","joker.core/defmacro","joker.core/bit-set","joker.core/odd?","joker.core/defn-","joker.core/partition","joker.core/tree-seq","joker.core/loop","joker.core/simple-ident?","joker.core/with-in-str","joker.core/load-string","joker.core/prn-err","joker.core/indexed?","joker.core/empty?","joker.core/frequencies","joker.core/refer","joker.core/some->","joker.core/neg?","joker.core/seq","joker.core/nthnext","joker.core/refer-clojure","joker.core/constantly","joker.core/<!","joker.core/*flush-on-newline*","joker.core/force","joker.core/dissoc","joker.core/map?","joker.core/rand","joker.core/integer?","joker.core/cast","joker.core/GoTypeOf","joker.core/compare","joker.core/key","joker.core/exit","joker.core/set","joker.core/<","joker.core/test","joker.core/inc","joker.core/apply","joker.core/condp","joker.core/doall","joker.core/concat","joker.core/pr-str","joker.core/macroexpand","joker.core/keyword?","joker.crypto/sha512","joker.crypto/sha224","joker.crypto/sha512-256","joker.crypto/sha1","joker.crypto/hmac","joker.crypto/sha256","joker.crypto/sha384","joker.crypto/sha512-224","joker.crypto/md5","joker.csv/csv-seq","joker.csv/write","joker.csv/write-string","joker.filepath/eval-symlinks","joker.filepath/join","joker.filepath/abs","joker.filepath/clean","joker.filepath/split-list","joker.filepath/rel","joker.filepath/to-slash","joker.filepath/abs?","joker.filepath/volume-name","joker.filepath/dir","joker.filepath/split","joker.filepath/file-seq","joker.filepath/from-slash","joker.filepath/list-separator","joker.filepath/ext","joker.filepath/matches?","joker.filepath/separator","joker.filepath/base","joker.filepath/glob","joker.hex/decode-string","joker.hex/encode-string","joker.hiccup/html","joker.hiccup/raw-string","joker.html/escape","joker.html/unescape","joker.http/send","joker.http/start-file-server","joker.http/start-server","joker.io/close","joker.io/copy","joker.io/pipe","joker.json/read-string","joker.json/write-string","joker.math/copy-sign","joker.math/log-10","joker.math/abs","joker.math/max-double","joker.math/smallest-nonzero-double","joker.math/log-2","joker.math/modf","joker.math/log-2-of-e","joker.math/inf?","joker.math/log-10-of-e","joker.math/sqrt-of-pi","joker.math/hypot","joker.math/floor","joker.math/cos","joker.math/exp","joker.math/exp-2","joker.math/round-to-even","joker.math/log","joker.math/cube-root","joker.math/exp-minus-1","joker.math/nan","joker.math/pow","joker.math/dim","joker.math/sqrt-of-phi","joker.math/nan?","joker.math/pi","joker.math/sqrt-of-2","joker.math/sin","joker.math/sqrt","joker.math/sqrt-of-e","joker.math/ln-of-10","joker.math/trunc","joker.math/phi","joker.math/ln-of-2","joker.math/sign-bit","joker.math/pow-10","joker.math/next-after","joker.math/e","joker.math/ceil","joker.math/log-plus-1","joker.math/inf","joker.math/round","joker.math/log-binary","joker.os/close","joker.os/chdir","joker.os/sh","joker.os/sh-from","joker.os/env","joker.os/stat","joker.os/remove-all","joker.os/get-env","joker.os/args","joker.os/create-temp","joker.os/create","joker.os/remove","joker.os/exec","joker.os/exists?","joker.os/cwd","joker.os/mkdir","joker.os/open","joker.os/ls","joker.os/set-env","joker.os/temp-dir","joker.os/exit","joker.os/mkdir-temp","joker.pprint/print-table","joker.repl/doc","joker.repl/dir","joker.repl/apropos","joker.repl/dir-fn","joker.set/join","joker.set/difference","joker.set/union","joker.set/rename","joker.set/project","joker.set/rename-keys","joker.set/map-invert","joker.set/subset?","joker.set/index","joker.set/intersection","joker.set/superset?","joker.set/select","joker.strconv/quote-char-to-ascii","joker.strconv/quote-to-ascii","joker.strconv/format-double","joker.strconv/atoi","joker.strconv/itoa","joker.strconv/quote-char-to-graphic","joker.strconv/format-int","joker.strconv/printable?","joker.strconv/parse-double","joker.strconv/parse-bool","joker.strconv/can-backquote?","joker.strconv/parse-int","joker.strconv/unquote","joker.strconv/graphic?","joker.strconv/format-bool","joker.strconv/quote-to-graphic","joker.strconv/quote","joker.strconv/quote-char","joker.string/trim-newline","joker.string/replace","joker.string/join","joker.string/last-index-of","joker.string/pad-right","joker.string/trim","joker.string/capitalize","joker.string/index-of","joker.string/escape","joker.string/trim-left","joker.string/trimr","joker.string/split","joker.string/re-quote","joker.string/ends-with?","joker.string/includes?","joker.string/split-lines","joker.string/upper-case","joker.string/blank?","joker.string/starts-with?","joker.string/reverse","joker.string/replace-first","joker.string/trim-right","joker.string/pad-left","joker.string/triml","joker.string/lower-case","joker.template/do-template","joker.template/apply-template","joker.test/deftest-","joker.test/*initial-report-counters*","joker.test/successful?","joker.test/set-test","joker.test/testing","joker.test/test-vars","joker.test/with-test-out","joker.test/report","joker.test/*load-tests*","joker.test/*stack-trace-depth*","joker.test/assert-expr","joker.test/*test-out*","joker.test/is","joker.test/*report-counters*","joker.test/use-fixtures","joker.test/join-fixtures","joker.test/with-test","joker.test/test-all-vars","joker.test/*testing-vars*","joker.test/deftest","joker.test/inc-report-counter","joker.test/compose-fixtures","joker.test/function?","joker.test/*testing-contexts*","joker.test/are","joker.test/assert-predicate","joker.test/try-expr","joker.test/test-var","joker.test/test-ns","joker.test/assert-any","joker.test/testing-contexts-str","joker.test/run-tests","joker.test/do-report","joker.test/testing-vars-str","joker.test/get-possibly-unbound-var","joker.test/run-all-tests","joker.time/in-timezone","joker.time/stamp-milli","joker.time/second","joker.time/minutes","joker.time/millisecond","joker.time/parse-duration","joker.time/sub","joker.time/format","joker.time/until","joker.time/now","joker.time/rfc1123","joker.time/string","joker.time/ansi-c","joker.time/rfc3339","joker.time/rfc3339-nano","joker.time/from-unix","joker.time/kitchen","joker.time/stamp-nano","joker.time/unix-date","joker.time/since","joker.time/rfc1123-z","joker.time/minute","joker.time/seconds","joker.time/stamp-micro","joker.time/hour","joker.time/unix","joker.time/add","joker.time/hours","joker.time/stamp","joker.time/rfc850","joker.time/parse","joker.time/sleep","joker.time/nanosecond","joker.time/truncate","joker.time/add-date","joker.time/ruby-date","joker.time/rfc822","joker.time/round","joker.time/rfc822-z","joker.time/microsecond","joker.tools.cli/parse-opts","joker.tools.cli/summarize","joker.tools.cli/get-default-options","joker.tools.cli/make-summary-part","joker.tools.cli/format-lines","joker.url/query-unescape","joker.url/path-escape","joker.url/path-unescape","joker.url/query-escape","joker.uuid/new","joker.walk/walk","joker.walk/macroexpand-all","joker.walk/postwalk-demo","joker.walk/prewalk-replace","joker.walk/keywordize-keys","joker.walk/postwalk-replace","joker.walk/postwalk","joker.walk/prewalk","joker.walk/stringify-keys","joker.walk/prewalk-demo","joker.yaml/read-string","joker.yaml/write-string"];

const els = document.querySelectorAll('a.types');
els.forEach(el => el.addEventListener('click', toggleTypes));


(() => {

	let selectedIndex = 0;

	function onMouseOver(e) {
		const i = parseInt(e.target.dataset.index);
		if (!isNaN(i)) {
			updateSelection(i);
		}
	}

	function onInput(e) {
		searchSuggestionsEl.classList.add('hide');
		if (e.target.value.match(/^\s*$/)) {
			return;
		}
		let suggestions = [];
		for (i = 0; i < terms.length; i++) {
			if (terms[i].includes(e.target.value)) {
				if (suggestions.push(terms[i]) >= 20) break;
			}
		}
		if (suggestions.length != 0) {
			searchSuggestionsEl.innerHTML = suggestions.map((term, i) => '<li data-index="' + i + '">'+ term + '</li>').join('');
			searchSuggestionsEl.querySelectorAll('li').forEach(el => {
				el.addEventListener('mouseover', onMouseOver);
				el.addEventListener('click', submitSearch);
			});
			searchSuggestionsEl.classList.remove('hide');
			updateSelection(0);
		}
	}

	function updateSelection(newIndex) {
		let items = searchSuggestionsEl.querySelectorAll('li');
		if (newIndex < 0 || newIndex >= items.length) {
			return;
		}
		if (items[selectedIndex]) {
			items[selectedIndex].classList.remove('selected');
		}
		items[newIndex].classList.add('selected');
		selectedIndex = newIndex;
	}

	function submitSearch() {
		let items = searchSuggestionsEl.querySelectorAll('li');
		if (items.length == 0) {
			return;
		}
		const url = items[selectedIndex].innerText.replace('/', '.html#');
		document.location = url;
	}

	function onKeydown(e) {
		if (e.keyCode == 38 || (e.ctrlKey && e.key == 'p')) { // up arrow or CTRL+p
			e.preventDefault();
			updateSelection(selectedIndex - 1);
		} else if (e.keyCode == 40 || (e.ctrlKey && e.key == 'n')) { // down arrow or CTRL+n
			e.preventDefault();
			updateSelection(selectedIndex + 1);
		} else if (e.keyCode == 13) { // enter
			submitSearch();
		}
	}

	const searchSuggestionsEl = document.getElementById('search-suggestions');
	const searchInputEl = document.getElementById('search-input');
	searchInputEl.addEventListener('input', onInput);
	searchInputEl.addEventListener('keydown', onKeydown);
})();
