goSrcDir: _tests/small/src
goSourcePath: /Users/craig/go/src
ClojureSourceDir (for import line): github.com/candid82/joker
byte
byte
byte
byte
net.IP
byte
byte
byte
byte
net.IPMask
int
int
net.IPMask
net.IP
bool
net.IP
bool
net.IP
bool
net.IP
bool
net.IP
bool
net.IP
bool
net.IP
bool
net.IP
net.IP
net.IP
net.IP
net.IP
net.IPMask
net.IP
net.IPMask
net.IP
net.IP
string
net.IP
[]byte
error
*net.IP
[]byte
error
net.IP
net.IP
bool
net.IPMask
int
int
net.IPMask
string
*net.IPNet
net.IP
bool
*net.IPNet
string
*net.IPNet
string
string
net.IP
string
net.IP
*net.IPNet
error
*net.IPAddr
string
*net.IPAddr
string
string
string
*net.IPAddr
error
*net.IPConn
syscall.ABEND002(reference to unavailable package `syscall' looking for type `RawConn')
error
*net.IPConn
[]byte
int
*net.IPAddr
error
*net.IPConn
[]byte
int
net.Addr
error
*net.IPConn
[]byte
[]byte
int
int
int
*net.IPAddr
error
*net.IPConn
[]byte
*net.IPAddr
int
error
*net.IPConn
[]byte
net.Addr
int
error
*net.IPConn
[]byte
[]byte
*net.IPAddr
int
int
error
string
*net.IPAddr
*net.IPAddr
*net.IPConn
error
string
*net.IPAddr
*net.IPConn
error
string
[]string
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
[]string
error
string
[]net.IP
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
[]net.IPAddr
error
string
string
int
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
string
int
error
string
string
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
string
error
string
string
string
string
[]*net.SRV
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
string
string
string
[]*net.SRV
error
string
[]*net.MX
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
[]*net.MX
error
string
[]*net.NS
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
[]*net.NS
error
string
[]string
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
[]string
error
string
[]string
error
*net.Resolver
context.ABEND002(reference to unavailable package `context' looking for type `Context')
string
[]string
error
*net.OpError
string
*net.OpError
bool
*net.OpError
bool
*net.ParseError
string
*net.AddrError
string
*net.AddrError
bool
*net.AddrError
bool
net.UnknownNetworkError
string
net.UnknownNetworkError
bool
net.UnknownNetworkError
bool
net.InvalidAddrError
string
net.InvalidAddrError
bool
net.InvalidAddrError
bool
*net.DNSConfigError
string
*net.DNSConfigError
bool
*net.DNSConfigError
bool
*net.DNSError
string
*net.DNSError
bool
*net.DNSError
bool
*net.Buffers
io.ABEND002(reference to unavailable package `io' looking for type `Writer')
int64
error
*net.Buffers
[]byte
int
error
*net/url.Error
string
*net/url.Error
bool
*net/url.Error
bool
net/url.EscapeError
string
net/url.InvalidHostError
string
string
string
error
string
string
error
string
string
string
string
string
*net/url.Userinfo
string
string
*net/url.Userinfo
*net/url.Userinfo
string
*net/url.Userinfo
string
bool
*net/url.Userinfo
string
string
*net/url.URL
error
string
*net/url.URL
error
*net/url.URL
string
*net/url.URL
string
net/url.Values
string
string
net/url.Values
string
string
net/url.Values
string
string
net/url.Values
string
string
net/url.Values
error
net/url.Values
string
*net/url.URL
bool
*net/url.URL
string
*net/url.URL
error
*net/url.URL
*net/url.URL
*net/url.URL
*net/url.URL
net/url.Values
*net/url.URL
string
*net/url.URL
string
*net/url.URL
string
*net/url.URL
[]byte
error
*net/url.URL
[]byte
error
Matchfile(_tests/small/src/net/dnsclient.go) => true <nil>
Matchfile(_tests/small/src/net/ip.go) => true <nil>
Matchfile(_tests/small/src/net/iprawsock.go) => true <nil>
Matchfile(_tests/small/src/net/lookup.go) => true <nil>
Matchfile(_tests/small/src/net/net.go) => true <nil>
Matchfile(_tests/small/src/net/url/url.go) => true <nil>
Processing go:
Processing net/url:
Processing net:
Processing package=net/url:
Processing package=net:
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x18 pc=0x1149ca5]

goroutine 1 [running]:
main.nonGoObjectTypeFor(0x11f3820, 0xc0002a80f0, 0xc000313640, 0x13, 0xc00001649c, 0x4, 0x118d700, 0xc000313660, 0xc0001494a0, 0x104ced4, ...)
	/Users/craig/go/src/github.com/candid82/joker/tools/gostd/codegen.go:649 +0x65
main.nonGoObjectCase(0x11f3820, 0xc0002a80f0, 0xc000313640, 0x13, 0xc00001649c, 0x4, 0x12, 0xc0002a7800, 0x170, 0x2c, ...)
	/Users/craig/go/src/github.com/candid82/joker/tools/gostd/codegen.go:628 +0x85
main.genCtor(0x11f3820, 0xc0002a80f0)
	/Users/craig/go/src/github.com/candid82/joker/tools/gostd/codegen.go:499 +0x1d1
main.GenTypeFromDb(0x11f3820, 0xc0002a80f0)
	/Users/craig/go/src/github.com/candid82/joker/tools/gostd/codegen.go:602 +0x1be
main.GenTypeInfo()
	/Users/craig/go/src/github.com/candid82/joker/tools/gostd/codegen.go:570 +0x85
main.main()
	/Users/craig/go/src/github.com/candid82/joker/tools/gostd/main.go:303 +0x2593
