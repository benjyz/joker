// This file is generated by generate-std.joke script. Do not edit manually!

package httputil

import (
	. "github.com/candid82/joker/core"
	"net/http/httputil"
)

var httputilNamespace = GLOBAL_ENV.EnsureNamespace(MakeSymbol("go.std.net.http.httputil"))

var ErrClosed_ *GoVar
var ErrLineTooLong_ *GoVar
var ErrPersistEOF_ *GoVar
var ErrPipeline_ *GoVar

var ClientConn_ Proc

func __ClientConn_(_args []Object) Object {
	_c := len(_args)
	switch {
	case _c == 1:
		_v := ExtractObject(_args, 0)
		_res := _ConstructClientConn(_v)
		return MakeGoObject(_res)

	default:
		PanicArity(_c)
	}
	return NIL
}

var ServerConn_ Proc

func __ServerConn_(_args []Object) Object {
	_c := len(_args)
	switch {
	case _c == 1:
		_v := ExtractObject(_args, 0)
		_res := _ConstructServerConn(_v)
		return MakeGoObject(_res)

	default:
		PanicArity(_c)
	}
	return NIL
}

func Init() {
	ErrClosed_ = &GoVar{Value: &httputil.ErrClosed}
	ErrLineTooLong_ = &GoVar{Value: &httputil.ErrLineTooLong}
	ErrPersistEOF_ = &GoVar{Value: &httputil.ErrPersistEOF}
	ErrPipeline_ = &GoVar{Value: &httputil.ErrPipeline}
	ClientConn_ = __ClientConn_
	ServerConn_ = __ServerConn_

	initNative()

	httputilNamespace.ResetMeta(MakeMeta(nil, `Provides a low-level interface to the net/http/httputil package.

Package httputil provides HTTP utility functions, complementing the
more common ones in the net/http package.
`, "1.0"))

	httputilNamespace.InternVar("ErrClosed", ErrClosed_,
		MakeMeta(
			nil,
			`Deprecated: No longer used.
`, "1.0"))

	httputilNamespace.InternVar("ErrLineTooLong", ErrLineTooLong_,
		MakeMeta(
			nil,
			`ErrLineTooLong is returned when reading malformed chunked data
with lines that are too long.
`, "1.0"))

	httputilNamespace.InternVar("ErrPersistEOF", ErrPersistEOF_,
		MakeMeta(
			nil,
			`Deprecated: No longer used.
`, "1.0"))

	httputilNamespace.InternVar("ErrPipeline", ErrPipeline_,
		MakeMeta(
			nil,
			`Deprecated: No longer used.
`, "1.0"))

	httputilNamespace.InternVar("ClientConn.", ClientConn_,
		MakeMeta(
			NewListFrom(NewVectorFrom(MakeSymbol("_v"))),
			`Constructor for httputil.ClientConn`, "1.0"))

	httputilNamespace.InternVar("ServerConn.", ServerConn_,
		MakeMeta(
			NewListFrom(NewVectorFrom(MakeSymbol("_v"))),
			`Constructor for httputil.ServerConn`, "1.0"))

}

func init() {
	httputilNamespace.Lazy = Init
}
