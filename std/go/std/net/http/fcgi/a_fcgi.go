// This file is generated by generate-std.joke script. Do not edit manually!

package fcgi

import (
	. "github.com/candid82/joker/core"
	"net/http/fcgi"
)

var fcgiNamespace = GLOBAL_ENV.EnsureNamespace(MakeSymbol("go.std.net.http.fcgi"))

var ErrConnClosed_ *GoVar
var ErrRequestAborted_ *GoVar


func Init() {
	ErrConnClosed_ = &GoVar{Value: &fcgi.ErrConnClosed}
	ErrRequestAborted_ = &GoVar{Value: &fcgi.ErrRequestAborted}


	initNative()

	fcgiNamespace.ResetMeta(MakeMeta(nil, `Provides a low-level interface to the net/http/fcgi package.

Package fcgi implements the FastCGI protocol.

See https://fast-cgi.github.io/ for an unofficial mirror of the
original documentation.

Currently only the responder role is supported.
`, "1.0"))

	fcgiNamespace.InternVar("ErrConnClosed", ErrConnClosed_,
		MakeMeta(
			nil,
			`ErrConnClosed is returned by Read when a handler attempts to read the body of
a request after the connection to the web server has been closed.
`, "1.0"))

	fcgiNamespace.InternVar("ErrRequestAborted", ErrRequestAborted_,
		MakeMeta(
			nil,
			`ErrRequestAborted is returned by Read when a handler attempts to read the
body of a request that has been aborted by the web server.
`, "1.0"))

	
}

func init() {
	fcgiNamespace.Lazy = Init
}
