// This file is generated by generate-std.joke script. Do not edit manually!

package io

import (
	. "github.com/candid82/joker/core"
	"io"
)

var ioNamespace = GLOBAL_ENV.EnsureNamespace(MakeSymbol("joker.io"))



var copy_ Proc

func __copy_(_args []Object) Object {
	_c := len(_args)
	switch {
	case _c == 2:
		dst := ExtractIOWriter(_args, 0)
		src := ExtractIOReader(_args, 1)
		 n, err := io.Copy(dst, src)
		PanicOnErr(err)
		_res := int(n)
		return MakeInt(_res)

	default:
		PanicArity(_c)
	}
	return NIL
}

func Init() {

	copy_ = __copy_

	ioNamespace.ResetMeta(MakeMeta(nil, `Provides basic interfaces to I/O primitives.`, "1.0"))

	
	ioNamespace.InternVar("copy", copy_,
		MakeMeta(
			NewListFrom(NewVectorFrom(MakeSymbol("dst"), MakeSymbol("src"))),
			`Copies from src to dst until either EOF is reached on src or an error occurs.
  Returns the number of bytes copied or throws an error.
  src must be IOReader, e.g. as returned by joker.os/open.
  dst must be IOWriter, e.g. as returned by joker.os/create.`, "1.0"))

}

func init() {
	ioNamespace.Lazy = Init
}
