(use 'go.std.net)
(def i (IPv4 1 2 3 4))
(def mx (LookupMX "theburleys.net"))
(def ptr-to-mx ((mx 0) 0))
(def mx (deref ptr-to-mx))
(def T (GoTypeOf mx))
(println "i=" i " ptr-to-mx=" ptr-to-mx " mx=" mx " T=" T )
(def M (Go MX nil))
(def MO (deref M))
(def members (get MO "Members"))
(println "M=" M " MO=" MO " .Members=" members)
(def memvec (get members "Hey"))
(println "memvec=" memvec)
(get members nil) ;; args[2] ignored when args[1] is a reflect.Map
(def lookup-mx (Go MX :LookupMX))
(def ipv4 (Go MX :IPv4))
(println "lookup-mx=" lookup-mx " ipv4=" ipv4)
(println "doc of lookup-mx:")
(joker.repl/print-doc lookup-mx)
(println "doc of ipv4:")
(joker.repl/print-doc ipv4)
